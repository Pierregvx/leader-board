// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TokenDeposit extends ethereum.Event {
  get params(): TokenDeposit__Params {
    return new TokenDeposit__Params(this);
  }
}

export class TokenDeposit__Params {
  _event: TokenDeposit;

  constructor(event: TokenDeposit) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get chainId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class TokenDepositAndSwap extends ethereum.Event {
  get params(): TokenDepositAndSwap__Params {
    return new TokenDepositAndSwap__Params(this);
  }
}

export class TokenDepositAndSwap__Params {
  _event: TokenDepositAndSwap;

  constructor(event: TokenDepositAndSwap) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get chainId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get tokenIndexFrom(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get tokenIndexTo(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get minDy(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class TokenMint extends ethereum.Event {
  get params(): TokenMint__Params {
    return new TokenMint__Params(this);
  }
}

export class TokenMint__Params {
  _event: TokenMint;

  constructor(event: TokenMint) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get kappa(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }
}

export class TokenMintAndSwap extends ethereum.Event {
  get params(): TokenMintAndSwap__Params {
    return new TokenMintAndSwap__Params(this);
  }
}

export class TokenMintAndSwap__Params {
  _event: TokenMintAndSwap;

  constructor(event: TokenMintAndSwap) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get tokenIndexFrom(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get tokenIndexTo(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get minDy(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get swapSuccess(): boolean {
    return this._event.parameters[8].value.toBoolean();
  }

  get kappa(): Bytes {
    return this._event.parameters[9].value.toBytes();
  }
}

export class TokenRedeem extends ethereum.Event {
  get params(): TokenRedeem__Params {
    return new TokenRedeem__Params(this);
  }
}

export class TokenRedeem__Params {
  _event: TokenRedeem;

  constructor(event: TokenRedeem) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get chainId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class TokenRedeemAndRemove extends ethereum.Event {
  get params(): TokenRedeemAndRemove__Params {
    return new TokenRedeemAndRemove__Params(this);
  }
}

export class TokenRedeemAndRemove__Params {
  _event: TokenRedeemAndRemove;

  constructor(event: TokenRedeemAndRemove) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get chainId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get swapTokenIndex(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get swapMinAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get swapDeadline(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class TokenRedeemAndSwap extends ethereum.Event {
  get params(): TokenRedeemAndSwap__Params {
    return new TokenRedeemAndSwap__Params(this);
  }
}

export class TokenRedeemAndSwap__Params {
  _event: TokenRedeemAndSwap;

  constructor(event: TokenRedeemAndSwap) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get chainId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get tokenIndexFrom(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get tokenIndexTo(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get minDy(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class TokenRedeemV2 extends ethereum.Event {
  get params(): TokenRedeemV2__Params {
    return new TokenRedeemV2__Params(this);
  }
}

export class TokenRedeemV2__Params {
  _event: TokenRedeemV2;

  constructor(event: TokenRedeemV2) {
    this._event = event;
  }

  get to(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get chainId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class TokenWithdraw extends ethereum.Event {
  get params(): TokenWithdraw__Params {
    return new TokenWithdraw__Params(this);
  }
}

export class TokenWithdraw__Params {
  _event: TokenWithdraw;

  constructor(event: TokenWithdraw) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get kappa(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }
}

export class TokenWithdrawAndRemove extends ethereum.Event {
  get params(): TokenWithdrawAndRemove__Params {
    return new TokenWithdrawAndRemove__Params(this);
  }
}

export class TokenWithdrawAndRemove__Params {
  _event: TokenWithdrawAndRemove;

  constructor(event: TokenWithdrawAndRemove) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get swapTokenIndex(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get swapMinAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get swapDeadline(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get swapSuccess(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }

  get kappa(): Bytes {
    return this._event.parameters[8].value.toBytes();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  GOVERNANCE_ROLE(): Bytes {
    let result = super.call(
      "GOVERNANCE_ROLE",
      "GOVERNANCE_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_GOVERNANCE_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "GOVERNANCE_ROLE",
      "GOVERNANCE_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  NODEGROUP_ROLE(): Bytes {
    let result = super.call("NODEGROUP_ROLE", "NODEGROUP_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_NODEGROUP_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "NODEGROUP_ROLE",
      "NODEGROUP_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  WETH_ADDRESS(): Address {
    let result = super.call("WETH_ADDRESS", "WETH_ADDRESS():(address)", []);

    return result[0].toAddress();
  }

  try_WETH_ADDRESS(): ethereum.CallResult<Address> {
    let result = super.tryCall("WETH_ADDRESS", "WETH_ADDRESS():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  bridgeVersion(): BigInt {
    let result = super.call("bridgeVersion", "bridgeVersion():(uint256)", []);

    return result[0].toBigInt();
  }

  try_bridgeVersion(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "bridgeVersion",
      "bridgeVersion():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  chainGasAmount(): BigInt {
    let result = super.call("chainGasAmount", "chainGasAmount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_chainGasAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "chainGasAmount",
      "chainGasAmount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFeeBalance(tokenAddress: Address): BigInt {
    let result = super.call(
      "getFeeBalance",
      "getFeeBalance(address):(uint256)",
      [ethereum.Value.fromAddress(tokenAddress)]
    );

    return result[0].toBigInt();
  }

  try_getFeeBalance(tokenAddress: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getFeeBalance",
      "getFeeBalance(address):(uint256)",
      [ethereum.Value.fromAddress(tokenAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  kappaExists(kappa: Bytes): boolean {
    let result = super.call("kappaExists", "kappaExists(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(kappa)
    ]);

    return result[0].toBoolean();
  }

  try_kappaExists(kappa: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall("kappaExists", "kappaExists(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(kappa)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  startBlockNumber(): BigInt {
    let result = super.call(
      "startBlockNumber",
      "startBlockNumber():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_startBlockNumber(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "startBlockNumber",
      "startBlockNumber():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class AddKappasCall extends ethereum.Call {
  get inputs(): AddKappasCall__Inputs {
    return new AddKappasCall__Inputs(this);
  }

  get outputs(): AddKappasCall__Outputs {
    return new AddKappasCall__Outputs(this);
  }
}

export class AddKappasCall__Inputs {
  _call: AddKappasCall;

  constructor(call: AddKappasCall) {
    this._call = call;
  }

  get kappas(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class AddKappasCall__Outputs {
  _call: AddKappasCall;

  constructor(call: AddKappasCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get chainId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositAndSwapCall extends ethereum.Call {
  get inputs(): DepositAndSwapCall__Inputs {
    return new DepositAndSwapCall__Inputs(this);
  }

  get outputs(): DepositAndSwapCall__Outputs {
    return new DepositAndSwapCall__Outputs(this);
  }
}

export class DepositAndSwapCall__Inputs {
  _call: DepositAndSwapCall;

  constructor(call: DepositAndSwapCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get chainId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get tokenIndexFrom(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get tokenIndexTo(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get minDy(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }
}

export class DepositAndSwapCall__Outputs {
  _call: DepositAndSwapCall;

  constructor(call: DepositAndSwapCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get fee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get kappa(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }
}

export class MintAndSwapCall extends ethereum.Call {
  get inputs(): MintAndSwapCall__Inputs {
    return new MintAndSwapCall__Inputs(this);
  }

  get outputs(): MintAndSwapCall__Outputs {
    return new MintAndSwapCall__Outputs(this);
  }
}

export class MintAndSwapCall__Inputs {
  _call: MintAndSwapCall;

  constructor(call: MintAndSwapCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get fee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get pool(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get tokenIndexFrom(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get tokenIndexTo(): i32 {
    return this._call.inputValues[6].value.toI32();
  }

  get minDy(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }

  get kappa(): Bytes {
    return this._call.inputValues[9].value.toBytes();
  }
}

export class MintAndSwapCall__Outputs {
  _call: MintAndSwapCall;

  constructor(call: MintAndSwapCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RedeemCall extends ethereum.Call {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get chainId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }
}

export class RedeemAndRemoveCall extends ethereum.Call {
  get inputs(): RedeemAndRemoveCall__Inputs {
    return new RedeemAndRemoveCall__Inputs(this);
  }

  get outputs(): RedeemAndRemoveCall__Outputs {
    return new RedeemAndRemoveCall__Outputs(this);
  }
}

export class RedeemAndRemoveCall__Inputs {
  _call: RedeemAndRemoveCall;

  constructor(call: RedeemAndRemoveCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get chainId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get swapTokenIndex(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get swapMinAmount(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get swapDeadline(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class RedeemAndRemoveCall__Outputs {
  _call: RedeemAndRemoveCall;

  constructor(call: RedeemAndRemoveCall) {
    this._call = call;
  }
}

export class RedeemAndSwapCall extends ethereum.Call {
  get inputs(): RedeemAndSwapCall__Inputs {
    return new RedeemAndSwapCall__Inputs(this);
  }

  get outputs(): RedeemAndSwapCall__Outputs {
    return new RedeemAndSwapCall__Outputs(this);
  }
}

export class RedeemAndSwapCall__Inputs {
  _call: RedeemAndSwapCall;

  constructor(call: RedeemAndSwapCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get chainId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get tokenIndexFrom(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get tokenIndexTo(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get minDy(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }
}

export class RedeemAndSwapCall__Outputs {
  _call: RedeemAndSwapCall;

  constructor(call: RedeemAndSwapCall) {
    this._call = call;
  }
}

export class RedeemV2Call extends ethereum.Call {
  get inputs(): RedeemV2Call__Inputs {
    return new RedeemV2Call__Inputs(this);
  }

  get outputs(): RedeemV2Call__Outputs {
    return new RedeemV2Call__Outputs(this);
  }
}

export class RedeemV2Call__Inputs {
  _call: RedeemV2Call;

  constructor(call: RedeemV2Call) {
    this._call = call;
  }

  get to(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get chainId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class RedeemV2Call__Outputs {
  _call: RedeemV2Call;

  constructor(call: RedeemV2Call) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetChainGasAmountCall extends ethereum.Call {
  get inputs(): SetChainGasAmountCall__Inputs {
    return new SetChainGasAmountCall__Inputs(this);
  }

  get outputs(): SetChainGasAmountCall__Outputs {
    return new SetChainGasAmountCall__Outputs(this);
  }
}

export class SetChainGasAmountCall__Inputs {
  _call: SetChainGasAmountCall;

  constructor(call: SetChainGasAmountCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetChainGasAmountCall__Outputs {
  _call: SetChainGasAmountCall;

  constructor(call: SetChainGasAmountCall) {
    this._call = call;
  }
}

export class SetWethAddressCall extends ethereum.Call {
  get inputs(): SetWethAddressCall__Inputs {
    return new SetWethAddressCall__Inputs(this);
  }

  get outputs(): SetWethAddressCall__Outputs {
    return new SetWethAddressCall__Outputs(this);
  }
}

export class SetWethAddressCall__Inputs {
  _call: SetWethAddressCall;

  constructor(call: SetWethAddressCall) {
    this._call = call;
  }

  get _wethAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetWethAddressCall__Outputs {
  _call: SetWethAddressCall;

  constructor(call: SetWethAddressCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get fee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get kappa(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawAndRemoveCall extends ethereum.Call {
  get inputs(): WithdrawAndRemoveCall__Inputs {
    return new WithdrawAndRemoveCall__Inputs(this);
  }

  get outputs(): WithdrawAndRemoveCall__Outputs {
    return new WithdrawAndRemoveCall__Outputs(this);
  }
}

export class WithdrawAndRemoveCall__Inputs {
  _call: WithdrawAndRemoveCall;

  constructor(call: WithdrawAndRemoveCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get fee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get pool(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get swapTokenIndex(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get swapMinAmount(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get swapDeadline(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get kappa(): Bytes {
    return this._call.inputValues[8].value.toBytes();
  }
}

export class WithdrawAndRemoveCall__Outputs {
  _call: WithdrawAndRemoveCall;

  constructor(call: WithdrawAndRemoveCall) {
    this._call = call;
  }
}

export class WithdrawFeesCall extends ethereum.Call {
  get inputs(): WithdrawFeesCall__Inputs {
    return new WithdrawFeesCall__Inputs(this);
  }

  get outputs(): WithdrawFeesCall__Outputs {
    return new WithdrawFeesCall__Outputs(this);
  }
}

export class WithdrawFeesCall__Inputs {
  _call: WithdrawFeesCall;

  constructor(call: WithdrawFeesCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawFeesCall__Outputs {
  _call: WithdrawFeesCall;

  constructor(call: WithdrawFeesCall) {
    this._call = call;
  }
}
